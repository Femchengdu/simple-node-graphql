{"version":3,"sources":["components/Layout/Layout.js","components/Backdrop/Backdrop.js","components/Toolbar/Toolbar.js","components/Navigation/MobileToggle/MobileToggle.js","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/MainNavigation/MainNavigation.js","components/Navigation/MobileNavigation/MobileNavigation.js","components/Button/Button.js","components/Modal/Modal.js","components/ErrorHandler/ErrorHandler.js","components/Feed/Post/Post.js","components/Form/Input/Input.js","components/Form/Input/FilePicker.js","components/Image/Image.js","util/validators.js","util/image.js","components/Feed/FeedEdit/FeedEdit.js","components/Paginator/Paginator.js","components/Loader/Loader.js","pages/Feed/Feed.js","pages/Feed/SinglePost/SinglePost.js","pages/Auth/Auth.js","pages/Auth/Login.js","pages/Auth/Signup.js","App.js","index.js"],"names":["layout","props","react_default","a","createElement","react","className","header","mobileNav","children","backdrop","ReactDOM","createPortal","open","join","onClick","document","getElementById","toolbar","mobileToggle","onOpen","logo","navItems","id","text","link","auth","navigationItems","concat","Object","toConsumableArray","filter","item","isAuth","map","key","mobile","NavLink","to","exact","onChoose","onLogout","mainNavigation","MobileToggle_MobileToggle","onOpenMobileNav","Logo_Logo","NavigationItems_NavigationItems","mobileNavigation","onChooseItem","button","Link","design","mode","disabled","loading","type","modal","title","Button_Button","onCancelModal","onAcceptModal","acceptEnabled","isLoading","errorHandler","error","Backdrop_Backdrop","onHandle","Modal_Modal","message","post","author","date","onStartEdit","onDelete","input","label","htmlFor","control","valid","touched","required","value","placeholder","onChange","e","target","files","onBlur","rows","filePicker","image","style","backgroundImage","imageUrl","backgroundSize","contain","backgroundPosition","left","trim","length","config","isValid","min","max","email","test","generateBase64FromImage","imageFile","reader","FileReader","promise","Promise","resolve","reject","onload","result","onerror","err","readAsDataURL","POST_FORM","validators","content","FeedEdit","state","postForm","formIsValid","imagePreview","postInputChangeHandler","then","b64","_this","setState","catch","prevState","_step","_iterator","_createForOfIteratorHelper","s","n","done","validator","f","updatedForm","objectSpread","defineProperty","inputName","inputBlurHandler","cancelPostChangeHandler","onCancelEdit","acceptPostChangeHandler","console","log","onFinishEdit","prevProps","this","editing","selectedPost","Input_Input","bind","FilePicker","Image_Image","Component","paginator","currentPage","onPrevious","lastPage","onNext","loader","Feed","isEditing","posts","totalPosts","editPost","status","postPage","postsLoading","editLoading","loadPosts","direction","page","graphqlQuery","query","variables","fetch","method","headers","Authorization","token","Content-Type","body","JSON","stringify","res","json","resData","errors","Error","_resData$data$posts","data","catchError","statusUpdateHandler","event","preventDefault","newPostHandler","startEditPostHandler","postId","find","p","_id","cancelEditHandler","finishEditHandler","postData","formData","FormData","append","_ref","dataKey","_resData$data$dataKey","creator","createdAt","updatedPosts","updatedTotalPosts","findIndex","locPost","pop","unshift","statusInputChangeHandler","deletePostHandler","_this2","_ref2","user","_this3","ErrorHandler","Feed_FeedEdit_FeedEdit","onSubmit","textAlign","marginTop","Loader_Loader","Paginator_Paginator","Math","ceil","Post_Post","name","Date","toLocaleDateString","SinglePost","match","params","_resData$data$post","Login","loginForm","password","inputChangeHandler","Login_createForOfIteratorHelper","Auth_Auth","onLogin","Signup","signupForm","Signup_createForOfIteratorHelper","onSignup","App","showBackdrop","showMobileNav","userId","authLoading","mobileNavHandler","isOpen","backdropClickHandler","logoutHandler","localStorage","removeItem","loginHandler","authData","_resData$data$login","login","setItem","expiryDate","getTime","toISOString","setAutoLogout","signupHandler","_authData$signupForm","history","replace","milliseconds","setTimeout","getItem","remainingMilliseconds","routes","Switch","Route","path","render","Auth_Login","assign","Auth_Signup","Redirect","pages_Feed_Feed","Feed_SinglePost_SinglePost","Layout_Layout","Toolbar_Toolbar","MainNavigation_MainNavigation","MobileNavigation_MobileNavigation","withRouter","BrowserRouter","src_App_0"],"mappings":"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","file":"static/js/main.f0021eac.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\n\nimport './Layout.css';\n\nconst layout = props => (\n  <Fragment>\n    <header className=\"main-header\">{props.header}</header>\n    {props.mobileNav}\n    <main className=\"content\">{props.children}</main>\n  </Fragment>\n);\n\nexport default layout;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst backdrop = props =>\n  ReactDOM.createPortal(\n    <div\n      className={['backdrop', props.open ? 'open' : ''].join(' ')}\n      onClick={props.onClick}\n    />,\n    document.getElementById('backdrop-root')\n  );\n\nexport default backdrop;\n","import React from 'react';\n\nimport './Toolbar.css';\n\nconst toolbar = props => (\n    <div className=\"toolbar\">\n       {props.children}\n    </div>\n);\n\nexport default toolbar;","import React from 'react';\n\nimport './MobileToggle.css';\n\nconst mobileToggle = props => (\n  <button className=\"mobile-toggle\" onClick={props.onOpen}>\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n    <span className=\"mobile-toggle__bar\" />\n  </button>\n);\n\nexport default mobileToggle;\n","import React from 'react';\n\nimport './Logo.css';\n\nconst logo = props => <h1 className=\"logo\">MessageNode</h1>;\n\nexport default logo;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport './NavigationItems.css';\n\nconst navItems = [\n  { id: 'feed', text: 'Feed', link: '/', auth: true },\n  { id: 'login', text: 'Login', link: '/', auth: false },\n  { id: 'signup', text: 'Signup', link: '/signup', auth: false }\n];\n\nconst navigationItems = props => [\n  ...navItems.filter(item => item.auth === props.isAuth).map(item => (\n    <li\n      key={item.id}\n      className={['navigation-item', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavLink to={item.link} exact onClick={props.onChoose}>\n        {item.text}\n      </NavLink>\n    </li>\n  )),\n  props.isAuth && (\n    <li className=\"navigation-item\" key=\"logout\">\n      <button onClick={props.onLogout}>Logout</button>\n    </li>\n  )\n];\n\nexport default navigationItems;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport MobileToggle from '../MobileToggle/MobileToggle';\nimport Logo from '../../Logo/Logo';\nimport NavigationItems from '../NavigationItems/NavigationItems';\n\nimport './MainNavigation.css';\n\nconst mainNavigation = props => (\n  <nav className=\"main-nav\">\n    <MobileToggle onOpen={props.onOpenMobileNav} />\n    <div className=\"main-nav__logo\">\n      <NavLink to=\"/\">\n        <Logo />\n      </NavLink>\n    </div>\n    <div className=\"spacer\" />\n    <ul className=\"main-nav__items\">\n      <NavigationItems isAuth={props.isAuth} onLogout={props.onLogout} />\n    </ul>\n  </nav>\n);\n\nexport default mainNavigation;\n","import React from 'react';\n\nimport NavigationItems from '../NavigationItems/NavigationItems';\nimport './MobileNavigation.css';\n\nconst mobileNavigation = props => (\n  <nav className={['mobile-nav', props.open ? 'open' : ''].join(' ')}>\n    <ul\n      className={['mobile-nav__items', props.mobile ? 'mobile' : ''].join(' ')}\n    >\n      <NavigationItems\n        mobile\n        onChoose={props.onChooseItem}\n        isAuth={props.isAuth}\n        onLogout={props.onLogout}\n      />\n    </ul>\n  </nav>\n);\n\nexport default mobileNavigation;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst button = props =>\n  !props.link ? (\n    <button\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      onClick={props.onClick}\n      disabled={props.disabled || props.loading}\n      type={props.type}\n    >\n      {props.loading ? 'Loading...' : props.children}\n    </button>\n  ) : (\n    <Link\n      className={[\n        'button',\n        `button--${props.design}`,\n        `button--${props.mode}`\n      ].join(' ')}\n      to={props.link}\n    >\n      {props.children}\n    </Link>\n  );\n\nexport default button;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport Button from '../Button/Button';\nimport './Modal.css';\n\nconst modal = props =>\n  ReactDOM.createPortal(\n    <div className=\"modal\">\n      <header className=\"modal__header\">\n        <h1>{props.title}</h1>\n      </header>\n      <div className=\"modal__content\">{props.children}</div>\n      <div className=\"modal__actions\">\n        <Button design=\"danger\" mode=\"flat\" onClick={props.onCancelModal}>\n          Cancel\n        </Button>\n        <Button\n          mode=\"raised\"\n          onClick={props.onAcceptModal}\n          disabled={!props.acceptEnabled}\n          loading={props.isLoading}\n        >\n          Accept\n        </Button>\n      </div>\n    </div>,\n    document.getElementById('modal-root')\n  );\n\nexport default modal;\n","import React, { Fragment } from 'react';\n\nimport Backdrop from '../Backdrop/Backdrop';\nimport Modal from '../Modal/Modal';\n\nconst errorHandler = props => (\n  <Fragment>\n    {props.error && <Backdrop onClick={props.onHandle} />}\n    {props.error && (\n      <Modal\n        title=\"An Error Occurred\"\n        onCancelModal={props.onHandle}\n        onAcceptModal={props.onHandle}\n        acceptEnabled\n      >\n        <p>{props.error.message}</p>\n      </Modal>\n    )}\n  </Fragment>\n);\n\nexport default errorHandler;\n","import React from 'react';\n\nimport Button from '../../Button/Button';\nimport './Post.css';\n\nconst post = props => (\n  <article className=\"post\">\n    <header className=\"post__header\">\n      <h3 className=\"post__meta\">\n        Posted by {props.author} on {props.date}\n      </h3>\n      <h1 className=\"post__title\">{props.title}</h1>\n    </header>\n    {/* <div className=\"post__image\">\n      <Image imageUrl={props.image} contain />\n    </div>\n    <div className=\"post__content\">{props.content}</div> */}\n    <div className=\"post__actions\">\n      <Button mode=\"flat\" link={props.id}>\n        View\n      </Button>\n      <Button mode=\"flat\" onClick={props.onStartEdit}>\n        Edit\n      </Button>\n      <Button mode=\"flat\" design=\"danger\" onClick={props.onDelete}>\n        Delete\n      </Button>\n    </div>\n  </article>\n);\n\nexport default post;\n","import React from 'react';\n\nimport './Input.css';\n\nconst input = props => (\n  <div className=\"input\">\n    {props.label && <label htmlFor={props.id}>{props.label}</label>}\n    {props.control === 'input' && (\n      <input\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        type={props.type}\n        id={props.id}\n        required={props.required}\n        value={props.value}\n        placeholder={props.placeholder}\n        onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n        onBlur={props.onBlur}\n      />\n    )}\n    {props.control === 'textarea' && (\n      <textarea\n        className={[\n          !props.valid ? 'invalid' : 'valid',\n          props.touched ? 'touched' : 'untouched'\n        ].join(' ')}\n        id={props.id}\n        rows={props.rows}\n        required={props.required}\n        value={props.value}\n        onChange={e => props.onChange(props.id, e.target.value)}\n        onBlur={props.onBlur}\n      />\n    )}\n  </div>\n);\n\nexport default input;\n","import React from 'react';\n\nimport './Input.css';\n\nconst filePicker = props => (\n  <div className=\"input\">\n    <label htmlFor={props.id}>{props.label}</label>\n    <input\n      className={[\n        !props.valid ? 'invalid' : 'valid',\n        props.touched ? 'touched' : 'untouched'\n      ].join(' ')}\n      type=\"file\"\n      id={props.id}\n      onChange={e => props.onChange(props.id, e.target.value, e.target.files)}\n      onBlur={props.onBlur}\n    />\n  </div>\n);\n\nexport default filePicker;\n","import React from 'react';\n\nimport './Image.css';\n\nconst image = props => (\n  <div\n    className=\"image\"\n    style={{\n      backgroundImage: `url('${props.imageUrl}')`,\n      backgroundSize: props.contain ? 'contain' : 'cover',\n      backgroundPosition: props.left ? 'left' : 'center'\n    }}\n  />\n);\n\nexport default image;\n","export const required = value => value.trim() !== '';\n\nexport const length = config => value => {\n  let isValid = true;\n  if (config.min) {\n    isValid = isValid && value.trim().length >= config.min;\n  }\n  if (config.max) {\n    isValid = isValid && value.trim().length <= config.max;\n  }\n  return isValid;\n};\n\nexport const email = value =>\n  /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/.test(\n    value\n  );\n","export const generateBase64FromImage = imageFile => {\n  const reader = new FileReader();\n  const promise = new Promise((resolve, reject) => {\n    reader.onload = e => resolve(e.target.result);\n    reader.onerror = err => reject(err);\n  });\n\n  reader.readAsDataURL(imageFile);\n  return promise;\n};\n","import React, { Component, Fragment } from \"react\";\n\nimport Backdrop from \"../../Backdrop/Backdrop\";\nimport Modal from \"../../Modal/Modal\";\nimport Input from \"../../Form/Input/Input\";\nimport FilePicker from \"../../Form/Input/FilePicker\";\nimport Image from \"../../Image/Image\";\nimport { required, length } from \"../../../util/validators\";\nimport { generateBase64FromImage } from \"../../../util/image\";\n\nconst POST_FORM = {\n  title: {\n    value: \"\",\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })],\n  },\n  image: {\n    value: \"\",\n    valid: false,\n    touched: false,\n    validators: [required],\n  },\n  content: {\n    value: \"\",\n    valid: false,\n    touched: false,\n    validators: [required, length({ min: 5 })],\n  },\n};\n\nclass FeedEdit extends Component {\n  state = {\n    postForm: POST_FORM,\n    formIsValid: false,\n    imagePreview: null,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      this.props.editing &&\n      prevProps.editing !== this.props.editing &&\n      prevProps.selectedPost !== this.props.selectedPost\n    ) {\n      const postForm = {\n        title: {\n          ...prevState.postForm.title,\n          value: this.props.selectedPost.title,\n          valid: true,\n        },\n        image: {\n          ...prevState.postForm.image,\n          value: this.props.selectedPost.imageUrl,\n          valid: true,\n        },\n        content: {\n          ...prevState.postForm.content,\n          value: this.props.selectedPost.content,\n          valid: true,\n        },\n      };\n      this.setState({ postForm: postForm, formIsValid: true });\n    }\n  }\n\n  postInputChangeHandler = (input, value, files) => {\n    if (files) {\n      generateBase64FromImage(files[0])\n        .then((b64) => {\n          this.setState({ imagePreview: b64 });\n        })\n        .catch((e) => {\n          this.setState({ imagePreview: null });\n        });\n    }\n    this.setState((prevState) => {\n      let isValid = true;\n      for (const validator of prevState.postForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.postForm,\n        [input]: {\n          ...prevState.postForm[input],\n          valid: isValid,\n          value: files ? files[0] : value,\n        },\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        postForm: updatedForm,\n        formIsValid: formIsValid,\n      };\n    });\n  };\n\n  inputBlurHandler = (input) => {\n    this.setState((prevState) => {\n      return {\n        postForm: {\n          ...prevState.postForm,\n          [input]: {\n            ...prevState.postForm[input],\n            touched: true,\n          },\n        },\n      };\n    });\n  };\n\n  cancelPostChangeHandler = () => {\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false,\n    });\n    this.props.onCancelEdit();\n  };\n\n  acceptPostChangeHandler = () => {\n    const post = {\n      title: this.state.postForm.title.value,\n      image: this.state.postForm.image.value,\n      content: this.state.postForm.content.value,\n    };\n    console.log(\"Handlers all the way :\", this.state, post);\n    this.props.onFinishEdit(post);\n    this.setState({\n      postForm: POST_FORM,\n      formIsValid: false,\n      imagePreview: null,\n    });\n  };\n\n  render() {\n    return this.props.editing ? (\n      <Fragment>\n        <Backdrop onClick={this.cancelPostChangeHandler} />\n        <Modal\n          title=\"New Post\"\n          acceptEnabled={this.state.formIsValid}\n          onCancelModal={this.cancelPostChangeHandler}\n          onAcceptModal={this.acceptPostChangeHandler}\n          isLoading={this.props.loading}\n        >\n          <form>\n            <Input\n              id=\"title\"\n              label=\"Title\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, \"title\")}\n              valid={this.state.postForm[\"title\"].valid}\n              touched={this.state.postForm[\"title\"].touched}\n              value={this.state.postForm[\"title\"].value}\n            />\n            <FilePicker\n              id=\"image\"\n              label=\"Image\"\n              control=\"input\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, \"image\")}\n              valid={this.state.postForm[\"image\"].valid}\n              touched={this.state.postForm[\"image\"].touched}\n            />\n            <div className=\"new-post__preview-image\">\n              {!this.state.imagePreview && <p>Please choose an image.</p>}\n              {this.state.imagePreview && (\n                <Image imageUrl={this.state.imagePreview} contain left />\n              )}\n            </div>\n            <Input\n              id=\"content\"\n              label=\"Content\"\n              control=\"textarea\"\n              rows=\"5\"\n              onChange={this.postInputChangeHandler}\n              onBlur={this.inputBlurHandler.bind(this, \"content\")}\n              valid={this.state.postForm[\"content\"].valid}\n              touched={this.state.postForm[\"content\"].touched}\n              value={this.state.postForm[\"content\"].value}\n            />\n          </form>\n        </Modal>\n      </Fragment>\n    ) : null;\n  }\n}\n\nexport default FeedEdit;\n","import React from 'react';\n\nimport './Paginator.css';\n\nconst paginator = props => (\n  <div className=\"paginator\">\n    {props.children}\n    <div className=\"paginator__controls\">\n      {props.currentPage > 1 && (\n        <button className=\"paginator__control\" onClick={props.onPrevious}>\n          Previous\n        </button>\n      )}\n      {props.currentPage < props.lastPage && (\n        <button className=\"paginator__control\" onClick={props.onNext}>\n          Next\n        </button>\n      )}\n    </div>\n  </div>\n);\n\nexport default paginator;\n","import React from 'react';\n\nimport './Loader.css';\n\nconst loader = props => (\n  <div className=\"loader\">\n    <div />\n    <div />\n    <div />\n    <div />\n  </div>\n);\n\nexport default loader;\n","import React, { Component, Fragment } from \"react\";\nimport Post from \"../../components/Feed/Post/Post\";\nimport Button from \"../../components/Button/Button\";\nimport FeedEdit from \"../../components/Feed/FeedEdit/FeedEdit\";\nimport Input from \"../../components/Form/Input/Input\";\nimport Paginator from \"../../components/Paginator/Paginator\";\nimport Loader from \"../../components/Loader/Loader\";\nimport ErrorHandler from \"../../components/ErrorHandler/ErrorHandler\";\nimport \"./Feed.css\";\n\nclass Feed extends Component {\n  state = {\n    isEditing: false,\n    posts: [],\n    totalPosts: 0,\n    editPost: null,\n    status: \"\",\n    postPage: 1,\n    postsLoading: true,\n    editLoading: false,\n  };\n\n  componentDidMount() {\n    const graphqlQuery = { query: `{user{status}}` };\n    fetch(\"http://localhost:3090/graphql\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        // if (res.status !== 200) {\n        //   throw new Error(\"Failed to fetch user status.\");\n        // }\n        return res.json();\n      })\n      .then(({ data, errors }) => {\n        if (errors) {\n          throw new Error(\"Create post failed!\");\n        }\n        const {\n          user: { status },\n        } = data;\n        console.log(\"The user status is :\", status);\n        this.setState({ status });\n      })\n      .catch(this.catchError);\n\n    this.loadPosts();\n  }\n\n  loadPosts = (direction) => {\n    if (direction) {\n      this.setState({ postsLoading: true, posts: [] });\n    }\n    let page = this.state.postPage;\n    if (direction === \"next\") {\n      page++;\n      this.setState({ postPage: page });\n    }\n    if (direction === \"previous\") {\n      page--;\n      this.setState({ postPage: page });\n    }\n    const graphqlQuery = {\n      query: `query FetchPosts($page: Int){posts(page:$page){posts{_id title content imageUrl creator{name} createdAt} totalPosts}}`,\n      variables: { page },\n    };\n    fetch(\"http://localhost:3090/graphql\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors && resData.errors.status === 422) {\n          throw new Error(\"Fetch post failed. something went wrong!\");\n        }\n\n        if (resData.errors) {\n          throw new Error(\"Fetch post failed!\");\n        }\n        const {\n          data: {\n            posts: { posts, totalPosts },\n          },\n        } = resData;\n        this.setState({\n          //posts: resData.posts,\n          //totalPosts: resData.totalItems,\n          posts,\n          totalPosts,\n          postsLoading: false,\n        });\n      })\n      .catch(this.catchError);\n  };\n\n  statusUpdateHandler = (event) => {\n    const { status } = this.state;\n    event.preventDefault();\n    const graphqlQuery = {\n      query: `mutation UpdateUserStatus($status: String!){\n        updateStatus(status:$status) {\n          status\n        }\n      }`,\n      variables: { status },\n    };\n    fetch(\"http://localhost:3090/graphql\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error(\"Update status failed!\");\n        }\n        console.log(resData);\n      })\n      .catch(this.catchError);\n  };\n\n  newPostHandler = () => {\n    this.setState({ isEditing: true });\n  };\n\n  startEditPostHandler = (postId) => {\n    this.setState((prevState) => {\n      const loadedPost = { ...prevState.posts.find((p) => p._id === postId) };\n\n      return {\n        isEditing: true,\n        editPost: loadedPost,\n      };\n    });\n  };\n\n  cancelEditHandler = () => {\n    this.setState({ isEditing: false, editPost: null });\n  };\n\n  finishEditHandler = (postData) => {\n    const { title, content, image } = postData;\n\n    this.setState({\n      editLoading: true,\n    });\n    // Set up data (with image!)\n    const formData = new FormData();\n    // formData.append(\"title\", title);\n    // formData.append(\"content\", content);\n    formData.append(\"image\", image);\n    if (this.state.editPost) {\n      formData.append(\"oldPath\", this.state.editPost.imageUrl);\n    }\n\n    fetch(\"http://localhost:3090/post-image\", {\n      method: \"PUT\",\n      body: formData,\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n      },\n    })\n      .then((res) => res.json())\n      .then(({ imageUrl }) => {\n        let graphqlQuery = {\n          query: `mutation CreateNewPost($title: String!, $content: String!, $imageUrl: String!) {\n          createPost(postInput: {title: $title, content: $content, imageUrl: $imageUrl}) {\n            _id\n            title\n            content\n            imageUrl\n            creator {name}\n            createdAt\n          }\n        }`,\n          variables: {\n            title,\n            content,\n            imageUrl,\n          },\n        };\n\n        if (this.state.editPost) {\n          const { _id } = this.state.editPost;\n          graphqlQuery = {\n            query: `mutation UpdateExistingPost($_id: ID!, $title: String!, $content: String!, $imageUrl: String!) {\n            updatePost(id: $_id, postInput: {title: $title, content: $content, imageUrl: $imageUrl}) {\n              _id\n              title\n              content\n              imageUrl\n              creator {name}\n              createdAt\n            }\n          }`,\n            variables: {\n              _id,\n              title,\n              content,\n              imageUrl: imageUrl ? imageUrl : \"undefined\",\n            },\n          };\n        }\n\n        return fetch(\"http://localhost:3090/graphql\", {\n          method: \"POST\",\n          body: JSON.stringify(graphqlQuery),\n          headers: {\n            Authorization: \"Bearer \" + this.props.token,\n            \"Content-Type\": \"application/json\",\n          },\n        });\n      })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors && resData.errors.status === 422) {\n          throw new Error(\"Create post failed. something went wrong!\");\n        }\n\n        if (resData.errors) {\n          throw new Error(\"Create post failed!\");\n        }\n\n        let dataKey = \"createPost\";\n        if (this.state.editPost) {\n          dataKey = \"updatePost\";\n        }\n        const {\n          data: {\n            [dataKey]: { _id, title, content, imageUrl, creator, createdAt },\n          },\n        } = resData;\n        const post = {\n          _id,\n          title,\n          imageUrl,\n          content,\n          creator,\n          createdAt,\n        };\n        this.setState((prevState) => {\n          let updatedPosts = [...prevState.posts];\n          let updatedTotalPosts = prevState.totalPosts;\n          if (prevState.editPost) {\n            const postIndex = prevState.posts.findIndex(\n              (locPost) => locPost._id === prevState.editPost._id\n            );\n            updatedPosts[postIndex] = post;\n          } else {\n            updatedTotalPosts++;\n            if (updatedTotalPosts >= 2) {\n              updatedPosts.pop();\n            }\n            updatedPosts.unshift(post);\n          }\n          return {\n            posts: updatedPosts,\n            isEditing: false,\n            editPost: null,\n            editLoading: false,\n            totalPosts: updatedTotalPosts,\n          };\n        });\n      })\n      .catch((err) => {\n        this.setState({\n          isEditing: false,\n          editPost: null,\n          editLoading: false,\n          error: err,\n        });\n      });\n  };\n\n  statusInputChangeHandler = (input, value) => {\n    this.setState({ status: value });\n  };\n\n  deletePostHandler = (postId) => {\n    const graphqlQuery = {\n      query: `mutation {\n      deletePost(id: \"${postId}\")\n    }`,\n    };\n    this.setState({ postsLoading: true });\n    fetch(\"http://localhost:3090/graphql\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors) {\n          throw new Error(\"Delete post failed!\");\n        }\n        this.loadPosts();\n        //console.log(resData);\n        // this.setState((prevState) => {\n        //   const updatedPosts = prevState.posts.filter((p) => p._id !== postId);\n        //   return { posts: updatedPosts, postsLoading: false };\n        // });\n      })\n      .catch((err) => {\n        this.setState({ postsLoading: false });\n      });\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  catchError = (error) => {\n    console.log(\"What is this error :\", error);\n    this.setState({ error: error });\n  };\n\n  render() {\n    return (\n      <Fragment>\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <FeedEdit\n          editing={this.state.isEditing}\n          selectedPost={this.state.editPost}\n          loading={this.state.editLoading}\n          onCancelEdit={this.cancelEditHandler}\n          onFinishEdit={this.finishEditHandler}\n        />\n        <section className=\"feed__status\">\n          <form onSubmit={this.statusUpdateHandler}>\n            <Input\n              type=\"text\"\n              placeholder=\"Your status\"\n              control=\"input\"\n              onChange={this.statusInputChangeHandler}\n              value={this.state.status}\n            />\n            <Button mode=\"flat\" type=\"submit\">\n              Update\n            </Button>\n          </form>\n        </section>\n        <section className=\"feed__control\">\n          <Button mode=\"raised\" design=\"accent\" onClick={this.newPostHandler}>\n            New Post\n          </Button>\n        </section>\n        <section className=\"feed\">\n          {this.state.postsLoading && (\n            <div style={{ textAlign: \"center\", marginTop: \"2rem\" }}>\n              <Loader />\n            </div>\n          )}\n          {this.state.posts.length <= 0 && !this.state.postsLoading ? (\n            <p style={{ textAlign: \"center\" }}>No posts found.</p>\n          ) : null}\n          {!this.state.postsLoading && (\n            <Paginator\n              onPrevious={this.loadPosts.bind(this, \"previous\")}\n              onNext={this.loadPosts.bind(this, \"next\")}\n              lastPage={Math.ceil(this.state.totalPosts / 2)}\n              currentPage={this.state.postPage}\n            >\n              {this.state.posts.map((post) => (\n                <Post\n                  key={post._id}\n                  id={post._id}\n                  author={post.creator.name}\n                  date={new Date(post.createdAt).toLocaleDateString(\"en-US\")}\n                  title={post.title}\n                  image={post.imageUrl}\n                  content={post.content}\n                  onStartEdit={this.startEditPostHandler.bind(this, post._id)}\n                  onDelete={this.deletePostHandler.bind(this, post._id)}\n                />\n              ))}\n            </Paginator>\n          )}\n        </section>\n      </Fragment>\n    );\n  }\n}\n\nexport default Feed;\n","import React, { Component } from \"react\";\n\nimport Image from \"../../../components/Image/Image\";\nimport \"./SinglePost.css\";\n\nclass SinglePost extends Component {\n  state = {\n    title: \"\",\n    author: \"\",\n    date: \"\",\n    image: \"\",\n    content: \"\",\n  };\n\n  componentDidMount() {\n    const { postId } = this.props.match.params;\n    const graphqlQuery = {\n      query: `query FetchSinglePost($postId: ID!){post(id: $postId) {title creator {name} createdAt imageUrl content}}`,\n      variables: { postId },\n    };\n    fetch(\"http://localhost:3090/graphql\", {\n      method: \"POST\",\n      headers: {\n        Authorization: \"Bearer \" + this.props.token,\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        console.log(\"component did mount :\", resData);\n        if (resData.errors && resData.errors.status === 422) {\n          throw new Error(\"Fetch status failed. something went wrong!\");\n        }\n\n        if (resData.errors) {\n          throw new Error(\"Fetch post failed!\");\n        }\n        const {\n          data: {\n            post: {\n              title,\n              creator: { name },\n              createdAt,\n              content,\n              imageUrl,\n            },\n          },\n        } = resData;\n        this.setState({\n          title,\n          author: name,\n          date: new Date(createdAt).toLocaleDateString(\"en-US\"),\n          content,\n          image: \"http://localhost:3090/\" + imageUrl,\n        });\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }\n\n  render() {\n    return (\n      <section className=\"single-post\">\n        <h1>{this.state.title}</h1>\n        <h2>\n          Created by {this.state.author} on {this.state.date}\n        </h2>\n        <div className=\"single-post__image\">\n          <Image contain imageUrl={this.state.image} />\n        </div>\n        <p>{this.state.content}</p>\n      </section>\n    );\n  }\n}\n\nexport default SinglePost;\n","import React from 'react';\n\nimport './Auth.css';\n\nconst auth = props => <section className=\"auth-form\">{props.children}</section>;\n\nexport default auth;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Login extends Component {\n  state = {\n    loginForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.loginForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.loginForm,\n        [input]: {\n          ...prevState.loginForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        loginForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        loginForm: {\n          ...prevState.loginForm,\n          [input]: {\n            ...prevState.loginForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form\n          onSubmit={e =>\n            this.props.onLogin(e, {\n              email: this.state.loginForm.email.value,\n              password: this.state.loginForm.password.value\n            })\n          }\n        >\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.loginForm['email'].value}\n            valid={this.state.loginForm['email'].valid}\n            touched={this.state.loginForm['email'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.loginForm['password'].value}\n            valid={this.state.loginForm['password'].valid}\n            touched={this.state.loginForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Login\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\n\nimport Input from '../../components/Form/Input/Input';\nimport Button from '../../components/Button/Button';\nimport { required, length, email } from '../../util/validators';\nimport Auth from './Auth';\n\nclass Signup extends Component {\n  state = {\n    signupForm: {\n      email: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, email]\n      },\n      password: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required, length({ min: 5 })]\n      },\n      name: {\n        value: '',\n        valid: false,\n        touched: false,\n        validators: [required]\n      },\n      formIsValid: false\n    }\n  };\n\n  inputChangeHandler = (input, value) => {\n    this.setState(prevState => {\n      let isValid = true;\n      for (const validator of prevState.signupForm[input].validators) {\n        isValid = isValid && validator(value);\n      }\n      const updatedForm = {\n        ...prevState.signupForm,\n        [input]: {\n          ...prevState.signupForm[input],\n          valid: isValid,\n          value: value\n        }\n      };\n      let formIsValid = true;\n      for (const inputName in updatedForm) {\n        formIsValid = formIsValid && updatedForm[inputName].valid;\n      }\n      return {\n        signupForm: updatedForm,\n        formIsValid: formIsValid\n      };\n    });\n  };\n\n  inputBlurHandler = input => {\n    this.setState(prevState => {\n      return {\n        signupForm: {\n          ...prevState.signupForm,\n          [input]: {\n            ...prevState.signupForm[input],\n            touched: true\n          }\n        }\n      };\n    });\n  };\n\n  render() {\n    return (\n      <Auth>\n        <form onSubmit={e => this.props.onSignup(e, this.state)}>\n          <Input\n            id=\"email\"\n            label=\"Your E-Mail\"\n            type=\"email\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'email')}\n            value={this.state.signupForm['email'].value}\n            valid={this.state.signupForm['email'].valid}\n            touched={this.state.signupForm['email'].touched}\n          />\n          <Input\n            id=\"name\"\n            label=\"Your Name\"\n            type=\"text\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'name')}\n            value={this.state.signupForm['name'].value}\n            valid={this.state.signupForm['name'].valid}\n            touched={this.state.signupForm['name'].touched}\n          />\n          <Input\n            id=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            control=\"input\"\n            onChange={this.inputChangeHandler}\n            onBlur={this.inputBlurHandler.bind(this, 'password')}\n            value={this.state.signupForm['password'].value}\n            valid={this.state.signupForm['password'].valid}\n            touched={this.state.signupForm['password'].touched}\n          />\n          <Button design=\"raised\" type=\"submit\" loading={this.props.loading}>\n            Signup\n          </Button>\n        </form>\n      </Auth>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { Component, Fragment } from \"react\";\nimport { Route, Switch, Redirect, withRouter } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout/Layout\";\nimport Backdrop from \"./components/Backdrop/Backdrop\";\nimport Toolbar from \"./components/Toolbar/Toolbar\";\nimport MainNavigation from \"./components/Navigation/MainNavigation/MainNavigation\";\nimport MobileNavigation from \"./components/Navigation/MobileNavigation/MobileNavigation\";\nimport ErrorHandler from \"./components/ErrorHandler/ErrorHandler\";\nimport FeedPage from \"./pages/Feed/Feed\";\nimport SinglePostPage from \"./pages/Feed/SinglePost/SinglePost\";\nimport LoginPage from \"./pages/Auth/Login\";\nimport SignupPage from \"./pages/Auth/Signup\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {\n    showBackdrop: false,\n    showMobileNav: false,\n    isAuth: false,\n    token: null,\n    userId: null,\n    authLoading: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    const token = localStorage.getItem(\"token\");\n    const expiryDate = localStorage.getItem(\"expiryDate\");\n    if (!token || !expiryDate) {\n      return;\n    }\n    if (new Date(expiryDate) <= new Date()) {\n      this.logoutHandler();\n      return;\n    }\n    const userId = localStorage.getItem(\"userId\");\n    const remainingMilliseconds =\n      new Date(expiryDate).getTime() - new Date().getTime();\n    this.setState({ isAuth: true, token: token, userId: userId });\n    this.setAutoLogout(remainingMilliseconds);\n  }\n\n  mobileNavHandler = (isOpen) => {\n    this.setState({ showMobileNav: isOpen, showBackdrop: isOpen });\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ showBackdrop: false, showMobileNav: false, error: null });\n  };\n\n  logoutHandler = () => {\n    this.setState({ isAuth: false, token: null });\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"expiryDate\");\n    localStorage.removeItem(\"userId\");\n  };\n\n  loginHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    const { email, password } = authData;\n    const graphqlQuery = {\n      query: `query UserLogin($email: String!, $password: String!){\n        login(email:$email, password:$password) {\n          token\n          userId\n        }\n      }`,\n      variables: { email, password },\n    };\n    fetch(\"http://localhost:3090/graphql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors && resData.errors.status === 422) {\n          throw new Error(\n            \"Login failed. Make sure you use the right email and password!\"\n          );\n        }\n\n        if (resData.errors) {\n          throw new Error(\"User login failed!\");\n        }\n        console.log(resData);\n        const {\n          data: {\n            login: { token, userId },\n          },\n        } = resData;\n        this.setState({\n          isAuth: true,\n          token: token,\n          authLoading: false,\n          userId: userId,\n        });\n        localStorage.setItem(\"token\", token);\n        localStorage.setItem(\"userId\", userId);\n        const remainingMilliseconds = 60 * 60 * 1000;\n        const expiryDate = new Date(\n          new Date().getTime() + remainingMilliseconds\n        );\n        localStorage.setItem(\"expiryDate\", expiryDate.toISOString());\n        this.setAutoLogout(remainingMilliseconds);\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err,\n        });\n      });\n  };\n\n  signupHandler = (event, authData) => {\n    event.preventDefault();\n    this.setState({ authLoading: true });\n    const { email, password, name } = authData.signupForm;\n\n    const graphqlQuery = {\n      query: `\n        mutation SignupNewUser($email: String!, $password: String!, $name: String!){\n          createUser(userInput: {email: $email, password: $password, name: $name }){\n            _id\n            email\n          }\n        }\n      `,\n      variables: {\n        email: email.value,\n        password: password.value,\n        name: name.value,\n      },\n    };\n    fetch(\"http://localhost:3090/graphql\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(graphqlQuery),\n    })\n      .then((res) => {\n        return res.json();\n      })\n      .then((resData) => {\n        if (resData.errors && resData.errors.status === 422) {\n          throw new Error(\n            \"Validation failed. Make sure the email address isn't used yet!\"\n          );\n        }\n        // console.log(resData);\n        if (resData.errors) {\n          throw new Error(\"User creation errors!\");\n        }\n        this.setState({ isAuth: false, authLoading: false });\n        this.props.history.replace(\"/\");\n      })\n      .catch((err) => {\n        console.log(err);\n        this.setState({\n          isAuth: false,\n          authLoading: false,\n          error: err,\n        });\n      });\n  };\n\n  setAutoLogout = (milliseconds) => {\n    setTimeout(() => {\n      this.logoutHandler();\n    }, milliseconds);\n  };\n\n  errorHandler = () => {\n    this.setState({ error: null });\n  };\n\n  render() {\n    let routes = (\n      <Switch>\n        <Route\n          path=\"/\"\n          exact\n          render={(props) => (\n            <LoginPage\n              {...props}\n              onLogin={this.loginHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Route\n          path=\"/signup\"\n          exact\n          render={(props) => (\n            <SignupPage\n              {...props}\n              onSignup={this.signupHandler}\n              loading={this.state.authLoading}\n            />\n          )}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n    if (this.state.isAuth) {\n      routes = (\n        <Switch>\n          <Route\n            path=\"/\"\n            exact\n            render={(props) => (\n              <FeedPage userId={this.state.userId} token={this.state.token} />\n            )}\n          />\n          <Route\n            path=\"/:postId\"\n            render={(props) => (\n              <SinglePostPage\n                {...props}\n                userId={this.state.userId}\n                token={this.state.token}\n              />\n            )}\n          />\n          <Redirect to=\"/\" />\n        </Switch>\n      );\n    }\n    return (\n      <Fragment>\n        {this.state.showBackdrop && (\n          <Backdrop onClick={this.backdropClickHandler} />\n        )}\n        <ErrorHandler error={this.state.error} onHandle={this.errorHandler} />\n        <Layout\n          header={\n            <Toolbar>\n              <MainNavigation\n                onOpenMobileNav={this.mobileNavHandler.bind(this, true)}\n                onLogout={this.logoutHandler}\n                isAuth={this.state.isAuth}\n              />\n            </Toolbar>\n          }\n          mobileNav={\n            <MobileNavigation\n              open={this.state.showMobileNav}\n              mobile\n              onChooseItem={this.mobileNavHandler.bind(this, false)}\n              onLogout={this.logoutHandler}\n              isAuth={this.state.isAuth}\n            />\n          }\n        />\n        {routes}\n      </Fragment>\n    );\n  }\n}\n\nexport default withRouter(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n"],"sourceRoot":""}